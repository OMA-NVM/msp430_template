	.text
	.file	"llvm-link"
	.globl	main                            ; -- Begin function main
	.p2align	1
	.type	main,@function
main:                                   ; @main
; %bb.0:                                ; %entry
	sub	#4, r1
	clr	2(r1)
	mov	#23168, &WDTCTL
	mov	&PM5CTL0, r12
	and	#-2, r12
	mov	r12, &PM5CTL0
	mov.b	&PADIR_L, r12
	bis.b	#1, r12
	mov.b	r12, &PADIR_L
	jmp	.LBB0_1
.LBB0_1:                                ; %for.cond
                                        ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_2 Depth 2
	mov	&a, r12
	mov	&b, r13
	add	r13, r12
	mov	r12, 0(r1)
	mov.b	&PAOUT_L, r12
	xor.b	#1, r12
	mov.b	r12, &PAOUT_L
	mov	#-15536, 0(r1)
	jmp	.LBB0_2
.LBB0_2:                                ; %do.body
                                        ;   Parent Loop BB0_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	mov	0(r1), r12
	add	#-1, r12
	mov	r12, 0(r1)
	jmp	.LBB0_3
.LBB0_3:                                ; %do.cond
                                        ;   in Loop: Header=BB0_2 Depth=2
	mov	0(r1), r12
	tst	r12
	jne	.LBB0_2
	jmp	.LBB0_4
.LBB0_4:                                ; %do.end
                                        ;   in Loop: Header=BB0_1 Depth=1
	jmp	.LBB0_1
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
                                        ; -- End function
	.type	a,@object                       ; @a
	.data
	.globl	a
	.p2align	1, 0x0
a:
	.short	64                              ; 0x40
	.size	a, 2

	.type	b,@object                       ; @b
	.globl	b
	.p2align	1, 0x0
b:
	.short	2                               ; 0x2
	.size	b, 2

	.ident	"clang version 20.0.0git (git@github.com:OMA-NVM/llvm-project.git 501e8370c575daeff8e9a75a1f96e3c95919fcdb)"
	.section	".note.GNU-stack","",@progbits
